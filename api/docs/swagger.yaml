definitions:
  models.Branch:
    properties:
      address:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      phone_number:
        type: string
      updated_at:
        type: string
    type: object
  models.Category:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      parent_id:
        type: string
      updated_at:
        type: string
    type: object
  models.ComingTable:
    properties:
      branch_id:
        type: string
      coming_id:
        type: string
      cteated_at:
        type: string
      date_time:
        type: string
      id:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
  models.ComingTableProduct:
    properties:
      barcode:
        type: string
      category_id:
        type: string
      coming_table_id:
        type: string
      count:
        type: integer
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      total_price:
        type: number
      updated_at:
        type: string
    type: object
  models.CreateBranch:
    properties:
      address:
        type: string
      name:
        type: string
      phone_number:
        type: string
    type: object
  models.CreateCategory:
    properties:
      name:
        type: string
      parent_id:
        type: string
    type: object
  models.CreateComingTable:
    properties:
      branch_id:
        type: string
      coming_id:
        type: string
      date_time:
        type: string
      status:
        type: string
    type: object
  models.CreateComingTableProduct:
    properties:
      barcode:
        type: string
      category_id:
        type: string
      coming_table_id:
        type: string
      count:
        type: integer
      name:
        type: string
      price:
        type: number
      total_price:
        type: number
    type: object
  models.CreateProduct:
    properties:
      barcode:
        type: number
      category_id:
        type: string
      name:
        type: string
      price:
        type: string
    type: object
  models.CreateRemaining:
    properties:
      barcode:
        type: string
      branch_id:
        type: string
      category_id:
        type: string
      count:
        type: integer
      name:
        type: string
      price:
        type: number
      total_price:
        type: number
    type: object
  models.GetAllBranch:
    properties:
      branches:
        items:
          $ref: '#/definitions/models.Branch'
        type: array
      count:
        type: integer
    type: object
  models.GetAllCategory:
    properties:
      categories:
        items:
          $ref: '#/definitions/models.Category'
        type: array
      count:
        type: integer
    type: object
  models.GetAllComingTable:
    properties:
      comingTables:
        items:
          $ref: '#/definitions/models.ComingTable'
        type: array
      count:
        type: integer
    type: object
  models.GetAllComingTableProduct:
    properties:
      comingTableProducts:
        items:
          $ref: '#/definitions/models.ComingTableProduct'
        type: array
      count:
        type: integer
    type: object
  models.GetAllProduct:
    properties:
      count:
        type: integer
      products:
        items:
          $ref: '#/definitions/models.Product'
        type: array
    type: object
  models.GetAllRemaining:
    properties:
      count:
        type: integer
      remainings:
        items:
          $ref: '#/definitions/models.Remaining'
        type: array
    type: object
  models.Product:
    properties:
      barcode:
        type: string
      category_id:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      updated_at:
        type: string
    type: object
  models.Remaining:
    properties:
      barcode:
        type: string
      branch_id:
        type: string
      category_id:
        type: string
      count:
        type: integer
      cteated_at:
        type: string
      founded_at:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      total_price:
        type: number
    type: object
  response.ErrorResp:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /branch:
    get:
      consumes:
      - application/json
      description: get branches
      parameters:
      - default: 10
        description: limit for response
        in: query
        name: limit
        required: true
        type: integer
      - default: 1
        description: page of req
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllBranch'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: List branches
      tags:
      - branches
    post:
      consumes:
      - application/json
      description: api for create branch
      parameters:
      - description: date of branch
        in: body
        name: branch
        required: true
        schema:
          $ref: '#/definitions/models.CreateBranch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: create brach
      tags:
      - branches
  /branch/{id}:
    delete:
      consumes:
      - application/json
      description: api fot delete branches
      parameters:
      - description: id of branch
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: strig
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: delete branch
      tags:
      - branches
    get:
      consumes:
      - application/json
      description: get branches
      parameters:
      - description: id of branch
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Branch'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: get branch
      tags:
      - branches
    put:
      consumes:
      - application/json
      description: api fot update branches
      parameters:
      - description: id of branch
        in: path
        name: id
        required: true
        type: string
      - description: id of branch
        in: body
        name: branch
        required: true
        schema:
          $ref: '#/definitions/models.CreateBranch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: strig
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: updateda branch
      tags:
      - branches
  /category:
    get:
      consumes:
      - application/json
      description: get category
      parameters:
      - default: 10
        description: limit for response
        in: query
        name: limit
        required: true
        type: integer
      - default: 1
        description: page of req
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllCategory'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: List category
      tags:
      - categories
    post:
      consumes:
      - application/json
      description: api for create category
      parameters:
      - description: date of category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CreateCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: create category
      tags:
      - categories
  /category/{id}:
    delete:
      consumes:
      - application/json
      description: api fot delete category
      parameters:
      - description: id of category
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: strig
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: delete category
      tags:
      - categories
    get:
      consumes:
      - application/json
      description: get category
      parameters:
      - description: id of category
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: get category
      tags:
      - categories
    put:
      consumes:
      - application/json
      description: api fot update category
      parameters:
      - description: id of category
        in: path
        name: id
        required: true
        type: string
      - description: id of category
        in: body
        name: sale
        required: true
        schema:
          $ref: '#/definitions/models.CreateCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: strig
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: updateda category
      tags:
      - categories
  /comingTable:
    get:
      consumes:
      - application/json
      description: get comingTable
      parameters:
      - default: 10
        description: limit for response
        in: query
        name: limit
        required: true
        type: integer
      - default: 1
        description: page of req
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllComingTable'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: List comingTable
      tags:
      - comingTables
    post:
      consumes:
      - application/json
      description: api for create comingTable
      parameters:
      - description: date of comingTable
        in: body
        name: comingTable
        required: true
        schema:
          $ref: '#/definitions/models.CreateComingTable'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: create comingTable
      tags:
      - comingTables
  /comingTable/{id}:
    delete:
      consumes:
      - application/json
      description: api fot delete comingTable
      parameters:
      - description: id of comingTable
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: strig
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: delete comingTable
      tags:
      - comingTables
    get:
      consumes:
      - application/json
      description: get comingTable
      parameters:
      - description: id of comingTables
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ComingTable'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: get comingTable
      tags:
      - comingTables
    put:
      consumes:
      - application/json
      description: api fot update comingTable
      parameters:
      - description: id of comingTable
        in: path
        name: id
        required: true
        type: string
      - description: id of comingTable
        in: body
        name: staff
        required: true
        schema:
          $ref: '#/definitions/models.CreateComingTable'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: strig
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: updateda comingTable
      tags:
      - comingTables
  /comingTableProduct:
    get:
      consumes:
      - application/json
      description: get comingTableProduct
      parameters:
      - default: 10
        description: limit for response
        in: query
        name: limit
        required: true
        type: integer
      - default: 1
        description: page of req
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllComingTableProduct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: List comingTableProduct
      tags:
      - comingTableProducts
    post:
      consumes:
      - application/json
      description: api for create comingTableProduct
      parameters:
      - description: date of comingTableProduct
        in: body
        name: comingTableProducts
        required: true
        schema:
          $ref: '#/definitions/models.CreateComingTableProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: create comingTableProduct
      tags:
      - comingTableProducts
  /comingTableProduct/{id}:
    delete:
      consumes:
      - application/json
      description: api fot delete comingTableProduct
      parameters:
      - description: id of comingTableProduct
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: strig
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: delete comingTableProduct
      tags:
      - comingTableProducts
    get:
      consumes:
      - application/json
      description: get comingTableProduct
      parameters:
      - description: id of comingTableProduct
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ComingTableProduct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: get comingTableProduct
      tags:
      - comingTableProducts
    put:
      consumes:
      - application/json
      description: api fot update comingTableProduct
      parameters:
      - description: id of comingTableProduct
        in: path
        name: id
        required: true
        type: string
      - description: id of comingTableProduct
        in: body
        name: staff
        required: true
        schema:
          $ref: '#/definitions/models.CreateComingTableProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: strig
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: updateda comingTableProduct
      tags:
      - comingTableProducts
  /product:
    get:
      consumes:
      - application/json
      description: get product
      parameters:
      - default: 10
        description: limit for response
        in: query
        name: limit
        required: true
        type: integer
      - default: 1
        description: page of req
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllProduct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: List product
      tags:
      - products
    post:
      consumes:
      - application/json
      description: api for create product
      parameters:
      - description: date of product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.CreateProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: create product
      tags:
      - products
  /product/{id}:
    delete:
      consumes:
      - application/json
      description: api fot delete product
      parameters:
      - description: id of products
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: strig
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: delete product
      tags:
      - products
    get:
      consumes:
      - application/json
      description: get product
      parameters:
      - description: id of product
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: get product
      tags:
      - products
    put:
      consumes:
      - application/json
      description: api fot update product
      parameters:
      - description: id of product
        in: path
        name: id
        required: true
        type: string
      - description: id of product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.CreateProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: strig
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: updateda product
      tags:
      - products
  /remaining:
    get:
      consumes:
      - application/json
      description: get remaining
      parameters:
      - default: 10
        description: limit for response
        in: query
        name: limit
        required: true
        type: integer
      - default: 1
        description: page of req
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllRemaining'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: List remaining
      tags:
      - remainings
    post:
      consumes:
      - application/json
      description: api for create remaining
      parameters:
      - description: date of remaining
        in: body
        name: remaining
        required: true
        schema:
          $ref: '#/definitions/models.CreateRemaining'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: create remaining
      tags:
      - remainings
  /remaining/{id}:
    delete:
      consumes:
      - application/json
      description: api fot delete remaining
      parameters:
      - description: id of remaining
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: strig
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: delete remaining
      tags:
      - remainings
    get:
      consumes:
      - application/json
      description: get remaining
      parameters:
      - description: id of remaining
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Remaining'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: get remaining
      tags:
      - remainings
    put:
      consumes:
      - application/json
      description: api fot update remaining
      parameters:
      - description: id of remaining
        in: path
        name: id
        required: true
        type: string
      - description: id of remaining
        in: body
        name: staff
        required: true
        schema:
          $ref: '#/definitions/models.CreateRemaining'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: strig
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResp'
      summary: updateda remaining
      tags:
      - remainings
swagger: "2.0"
